# This file generates all new syntax registered.
# 
# You can edit these as much as you would like.
# Keep in mind that some syntax are more complex than others and if you don't understand it, it's best not to touch it.

Syntax:
  Events:
    SkungeePlayerDisconnect:
      enabled: true
      patterns:
      - '[Skungee] bungee[[ ]cord] disconnect'
      eventvalues: []
    SkungeePingEvent:
      enabled: true
      patterns:
      - '[Skungee] bungee[[ ]cord] [server list] ping'
      eventvalues: []
    SkungeePlayerChatEvent:
      enabled: true
      patterns:
      - '[Skungee] bungee[[ ]cord] chat'
      eventvalues: []
    SkungeeMessageEvent:
      enabled: true
      patterns:
      - '[Skungee] (bungeecord|skungee) message [[from] [channel[s]] %strings%]'
      eventvalues: []
    SkungeePlayerSwitchServer:
      enabled: true
      patterns:
      - '[Skungee] [player] switching of server[s] [to %string%]'
      - '[Skungee] [player] switch server[s] [to %string%]'
      - '[Skungee] [player] server switch [to %string%]'
      eventvalues: []
  PropertyExpressions:
    ExprBungeePlayerChatMode:
      enabled: true
      description: Returns the chat mode(s) of the defined Bungeecord player(s).
      syntax:
      - '[Skungee] [(all [[of] the]|the)] bungee[[ ]cord] chat[ ](setting|mode)[s]
        (of|from) [(player|uuid)[s]] %strings/players%'
      - '[Skungee] %strings/players%[''s] [(player|uuid)[s]] bungee[[ ]cord] chat[
        ](setting|mode)[s]'
    ExprBungeeServerAddress:
      enabled: true
      description: Returns the ip address(es) of the defined server(s).
      syntax:
      - '[Skungee] [(all [[of] the]|the)] [server] ip[s] [address[es]] (of|from) [bungee[[
        ]cord]] server[s] %strings%'
      - '[Skungee] %strings%[''s] [bungee[[ ]cord]] server[s] [server] ip[s] [address[es]]'
    ExprBungeePlayerAddress:
      enabled: true
      description: Returns the ip address(es) of the defined Bungeecord player(s).
      syntax:
      - '[Skungee] [(all [[of] the]|the)] bungee[[ ]cord] ip [address[es]] (of|from)
        [(player|uuid)[s]] %strings/players%'
      - '[Skungee] %strings/players%[''s] [(player|uuid)[s]] bungee[[ ]cord] ip [address[es]]'
    ExprRedisBungeePlayerNames:
      enabled: true
      description: Returns the name(s) of the defined RedisBungee player(s).
      syntax:
      - '[Skungee] [(all [[of] the]|the)] redis[( |-)]bungee[[ ]cord] [user[ ]]name[s]
        (of|from) [(player|uuid)[s]] %strings/players%'
      - '[Skungee] %strings/players%[''s] [(player|uuid)[s]] redis[( |-)]bungee[[
        ]cord] [user[ ]]name[s]'
    ExprRedisBungeePlayerProxyID:
      enabled: true
      description: Returns the ID(s) of the Bungeecord proxy that the defined RedisBungee
        player(s) are on.
      syntax:
      - '[Skungee] [(all [[of] the]|the)] redis[( |-)]bungee[[ ]cord] [player] [proxy]
        ID (of|from) [(player|uuid)[s]] %strings/players%'
      - '[Skungee] %strings/players%[''s] [(player|uuid)[s]] redis[( |-)]bungee[[
        ]cord] [player] [proxy] ID'
    ExprBungeePlayerServer:
      enabled: true
      changers: '[SET]'
      description: Returns the server(s) of the defined Bungeecord player(s).
      syntax:
      - '[Skungee] [(all [[of] the]|the)] [(connected|current)] bungee[[ ]cord] server[s]
        (of|from) [(player|uuid)[s]] %strings/players%'
      - '[Skungee] %strings/players%[''s] [(player|uuid)[s]] [(connected|current)]
        bungee[[ ]cord] server[s]'
    ExprBungeePlayerDisplayName:
      enabled: true
      changers: All changers
      description: Returns the display name(s) of the defined Bungeecord player(s).
      syntax:
      - '[Skungee] [(all [[of] the]|the)] bungee[[ ]cord] display[ ]name[s] (of|from)
        [(player|uuid)[s]] %strings/players%'
      - '[Skungee] %strings/players%[''s] [(player|uuid)[s]] bungee[[ ]cord] display[
        ]name[s]'
    ExprBungeePlayerHandSetting:
      enabled: true
      description: Returns the hand setting(s) of the defined Bungeecord player(s).
        This is either left or right
      syntax:
      - '[Skungee] [(all [[of] the]|the)] bungee[[ ]cord] hand[ ](setting|mode)[s]
        (of|from) [(player|uuid)[s]] %strings/players%'
      - '[Skungee] %strings/players%[''s] [(player|uuid)[s]] bungee[[ ]cord] hand[
        ](setting|mode)[s]'
    ExprBungeeTitleSubtitle:
      enabled: true
      changers: '[SET, DELETE, REMOVE, RESET]'
      description: Returns the subtitle(s) of defined skungee title(s).
      syntax:
      - '[Skungee] [(all [[of] the]|the)] sub[-]title[s] (of|from) [(skungee|bungee[[
        ]cord])] title[s] %skungeetitles%'
      - '[Skungee] %skungeetitles%[''s] [(skungee|bungee[[ ]cord])] title[s] sub[-]title[s]'
    ExprBungeePlayerReconnectServer:
      enabled: true
      changers: '[SET]'
      description: Returns the reconnected server(s) of the defined Bungeecord player(s).
        This is the server that the player reconnects to on their next login.
      syntax:
      - '[Skungee] [(all [[of] the]|the)] bungee[[ ]cord] reconnect[ed] server[s]
        (of|from) [(player|uuid)[s]] %strings/players%'
      - '[Skungee] %strings/players%[''s] [(player|uuid)[s]] bungee[[ ]cord] reconnect[ed]
        server[s]'
    ExprBungeePlayerPermissions:
      enabled: true
      changers: All changers
      description: Returns the permissions(s) of the defined Bungeecord player(s).
      syntax:
      - '[Skungee] [(all [[of] the]|the)] bungee[[ ]cord] permissions (of|from) [(player|uuid)[s]]
        %strings/players%'
      - '[Skungee] %strings/players%[''s] [(player|uuid)[s]] bungee[[ ]cord] permissions'
    ExprBungeePlayerViewDIstance:
      enabled: true
      changers: All changers
      description: Returns the view distance(s) of the defined Bungeecord player(s).
      syntax:
      - '[Skungee] [(all [[of] the]|the)] bungee[[ ]cord] (render|view) distance[s]
        (of|from) [(player|uuid)[s]] %strings/players%'
      - '[Skungee] %strings/players%[''s] [(player|uuid)[s]] bungee[[ ]cord] (render|view)
        distance[s]'
    ExprBungeeTitleFadeIn:
      enabled: true
      changers: All changers
      description: Returns the fade in time(s) of defined skungee title(s).
      syntax:
      - '[Skungee] [(all [[of] the]|the)] fade in[ ][time][s] (of|from) [(skungee|bungee[[
        ]cord])] title[s] %skungeetitles%'
      - '[Skungee] %skungeetitles%[''s] [(skungee|bungee[[ ]cord])] title[s] fade
        in[ ][time][s]'
    ExprRedisBungeePlayerLastOnline:
      enabled: true
      description: Returns the last known online time(s) of the defined RedisBungee
        player(s).
      syntax:
      - '[Skungee] [(all [[of] the]|the)] redis[( |-)]bungee[[ ]cord] last [known]
        login[s] [time[s]] (of|from) [(player|uuid)[s]] %strings/players%'
      - '[Skungee] %strings/players%[''s] [(player|uuid)[s]] redis[( |-)]bungee[[
        ]cord] last [known] login[s] [time[s]]'
    ExprBungeePlayerUUID:
      enabled: true
      description: |-
        Returns the uuid(s) of the defined Bungeecord player(s). The Bungeecord unique id, is the best option that Bungeecord can find.
        If your spigot server doesn't have the `bungeecord` option set to true and the Bungeecord doesn't have `ip_forward` and `online_mode` true, this will be a generated UUID from Spigot.
      syntax:
      - '[Skungee] [(all [[of] the]|the)] bungee[[ ]cord] (uuid|unique id)[s] (of|from)
        [player[s]] %strings/players%'
      - '[Skungee] %strings/players%[''s] [player[s]] bungee[[ ]cord] (uuid|unique
        id)[s]'
    ExprBungeePlayerGroups:
      enabled: true
      changers: All changers
      description: Returns the permission groups(s) of the defined Bungeecord player(s).
      syntax:
      - '[Skungee] [(all [[of] the]|the)] bungee[[ ]cord] [permission] groups (of|from)
        [(player|uuid)[s]] %strings/players%'
      - '[Skungee] %strings/players%[''s] [(player|uuid)[s]] bungee[[ ]cord] [permission]
        groups'
    ExprBungeeServerOnline:
      enabled: true
      description: Returns the online state(s) from the defined server(s).
      syntax:
      - '[Skungee] [(all [[of] the]|the)] online stat(us|e)[s] (of|from) [bungee[[
        ]cord]] [server[s]] %strings%'
      - '[Skungee] %strings%[''s] [bungee[[ ]cord]] [server[s]] online stat(us|e)[s]'
    ExprBungeePlayerYaw:
      enabled: true
      description: Returns the yaw orientation(s) of the defined Bungeecord player(s).
      syntax:
      - '[Skungee] [(all [[of] the]|the)] bungee[[ ]cord] yaw[s] (of|from) [(player|uuid)[s]]
        %strings/players%'
      - '[Skungee] %strings/players%[''s] [(player|uuid)[s]] bungee[[ ]cord] yaw[s]'
    ExprBungeePlayerPlayTime:
      enabled: true
      description: Returns the play time(s) of the defined Bungeecord player(s).
      syntax:
      - '[Skungee] [(all [[of] the]|the)] bungee[[ ]cord] play[ ]time [(of|for|on)
        servers %strings-%] (of|from) [(player|uuid)[s]] %strings/players%'
      - '[Skungee] %strings/players%[''s] [(player|uuid)[s]] bungee[[ ]cord] play[
        ]time [(of|for|on) servers %strings-%]'
    ExprBungeePlayerPing:
      enabled: true
      description: Returns the ping(s) of the defined Bungeecord player(s).
      syntax:
      - '[Skungee] [(all [[of] the]|the)] bungee[[ ]cord] ping (of|from) [(player|uuid)[s]]
        %strings/players%'
      - '[Skungee] %strings/players%[''s] [(player|uuid)[s]] bungee[[ ]cord] ping'
    ExprRedisBungeePlayerAddress:
      enabled: true
      description: Returns the ip address(es) of the defined RedisBungee player(s).
      syntax:
      - '[Skungee] [(all [[of] the]|the)] redis[( |-)]bungee[[ ]cord] ip [address[es]]
        (of|from) [(player|uuid)[s]] %strings/players%'
      - '[Skungee] %strings/players%[''s] [(player|uuid)[s]] redis[( |-)]bungee[[
        ]cord] ip [address[es]]'
    ExprBungeeTitleTime:
      enabled: true
      changers: All changers
      description: Returns the time(s) of defined skungee title(s).
      syntax:
      - '[Skungee] [(all [[of] the]|the)] [stay] time[s] (of|from) [(skungee|bungee[[
        ]cord])] title[s] %skungeetitles%'
      - '[Skungee] %skungeetitles%[''s] [(skungee|bungee[[ ]cord])] title[s] [stay]
        time[s]'
    ExprBungeePlayerName:
      enabled: true
      description: Returns the name(s) of the defined Bungeecord player(s).
      syntax:
      - '[Skungee] [(all [[of] the]|the)] bungee[[ ]cord] [user[ ]]name[s] (of|from)
        [(player|uuid)[s]] %strings/players%'
      - '[Skungee] %strings/players%[''s] [(player|uuid)[s]] bungee[[ ]cord] [user[
        ]]name[s]'
    ExprBungeeServerPlayerLimit:
      enabled: true
      description: Returns the max players the defined server(s) can have based on
        their server.properies.
      syntax:
      - '[Skungee] [(all [[of] the]|the)] (max[imum] [amount [of]] players|player
        limit) (of|from) [bungee[[ ]cord]] [server[s]] %strings%'
      - '[Skungee] %strings%[''s] [bungee[[ ]cord]] [server[s]] (max[imum] [amount
        [of]] players|player limit)'
    ExprBungeeTitleFadeOut:
      enabled: true
      changers: All changers
      description: Returns the fade out time(s) of defined skungee title(s).
      syntax:
      - '[Skungee] [(all [[of] the]|the)] fade out[ ][time][s] (of|from) [(skungee|bungee[[
        ]cord])] title[s] %skungeetitles%'
      - '[Skungee] %skungeetitles%[''s] [(skungee|bungee[[ ]cord])] title[s] fade
        out[ ][time][s]'
    ExprBungeeServerMOTD:
      enabled: true
      description: Returns the message of the day(s) from the defined server(s).
      syntax:
      - '[Skungee] [(all [[of] the]|the)] (motd|message of the day)[s] (of|from) [bungee[[
        ]cord]] [server[s]] %strings%'
      - '[Skungee] %strings%[''s] [bungee[[ ]cord]] [server[s]] (motd|message of the
        day)[s]'
    ExprRedisBungeePlayerServer:
      enabled: true
      description: Returns the server(s) of the defined RedisBungee player(s).
      syntax:
      - '[Skungee] [(all [[of] the]|the)] [(connected|current)] redis[( |-)]bungee[[
        ]cord] server[s] (of|from) [(player|uuid)[s]] %strings/players%'
      - '[Skungee] %strings/players%[''s] [(player|uuid)[s]] [(connected|current)]
        redis[( |-)]bungee[[ ]cord] server[s]'
    ExprBungeePlayerPitch:
      enabled: true
      description: Returns the pitch orientation(s) of the defined Bungeecord player(s).
      syntax:
      - '[Skungee] [(all [[of] the]|the)] bungee[[ ]cord] pitch[es] (of|from) [(player|uuid)[s]]
        %strings/players%'
      - '[Skungee] %strings/players%[''s] [(player|uuid)[s]] bungee[[ ]cord] pitch[es]'
  Enums:
    ChatMode:
      names:
      - null
      - null
      - null
      user: chatmodes?
    HandSetting:
      names:
      - null
      - null
      user: handsettings?
    ConnectReason:
      names:
      - null
      - null
      - null
      - null
      - null
      - null
      - null
      - null
      user: connectreasons?
  Expressions:
    ExprYaml:
      enabled: true
      description: The main syntax for managing yaml on the Bungeecord. DO NOT USE
        THIS AS A STORAGE SYSTEM, Use Network Variables if you're trying to make Network
        storage or MySQL.
      syntax:
      - (skungee|bungee[[ ]cord]) [y[a]ml] (1¦value|2¦(node|path)[[s with] keys]|3¦list)
        %string% (of|in|from) [file] %string%
    ExprPingFavicon:
      enabled: true
      changers: '[SET]'
      description: Returns the favicon invloved in the Bungeecord ping event. This
        can only be returned if Skellett or SkQuery is installed.
      syntax:
      - (ping|server list|event) bungee[[ ]cord] (favicon|icon|image)
      - bungee[[ ]cord] (ping|server list|event) (favicon|icon|image)
    ExprBungeeThrottle:
      enabled: true
      description: Returns the throttle set in the main configurarion of the Bungeecord.
      syntax:
      - '[the] bungee[[ ]cord[['']s]] throttle [connection] [delay]'
    ExprRedisBungeePlayers:
      enabled: true
      description: Returns a string list of all the RedisBungee players.
      syntax:
      - '[(all [[of] the]|the)] redis[( |-)]bungee[[ ]cord] players'
    ExprPingProtocol:
      enabled: true
      changers: '[SET]'
      description: Returns the protocol invloved in the Bungeecord ping event. A number
        may only be called on the protocol section of the syntax.
      syntax:
      - (ping|server list|event) bungee[[ ]cord] (version|protocol) [(1¦name|2¦(protocol|number))]
      - bungee[[ ]cord] (ping|server list|event) (version|protocol) [(1¦name|2¦(protocol|number))]
    ExprRedisBungeeID:
      enabled: true
      description: Returns the RedisBungee ID of the Bungeecord connected to this
        Skungee.
      syntax:
      - '[th(e|is)] [bungee[[ ]cord[['']s]]] redis[( |-)]bungee[[ ]cord] ID'
    ExprSkungeeMessage:
      enabled: true
      description: Returns the messages of a Skungee message event.
      syntax:
      - '[(all [[of] the]|the)] (skungee|bungee[[ ]cord]) message[s]'
    ExprRedisBungeeServers:
      enabled: true
      description: Returns a string list of all the RedisBungee servers.
      syntax:
      - '[(all [[of] the]|the)] redis[( |-)]bungee[[ ]cord] servers'
    ExprBungeeTimeout:
      enabled: true
      description: Returns the timeout set in the main configurarion of the Bungeecord.
      syntax:
      - '[the] bungee[[ ]cord[['']s]] time[ ]out [connection] [delay]'
    ExprEventBungeeServers:
      enabled: true
      description: Returns the Bungeecord server(s) invloved in the event.
      syntax:
      - '[(all [[of] the]|the)] event (skungee|bungee[[ ]cord]) server[s]'
    ExprBungeecordName:
      enabled: true
      description: Returns the name of the Bungeecord.
      syntax:
      - '[the] name of [the] bungee[[ ]cord]'
      - '[the] bungee[[ ]cord[['']s]] name'
    ExprBungeePlayers:
      enabled: true
      description: Returns a string list of all the bungeecord players.
      syntax:
      - '[(all [[of] the]|the)] bungee[[ ]cord] players'
    ExprBungeeDisabledCommands:
      enabled: true
      description: Returns all of the disabled commands that are located within the
        Bungeecord configuration.
      syntax:
      - '[(all [[of] the]|the)] bungee[[ ]cord] disabled commands'
      - bungee[[ ]cord]'s disabled commands
      - '[(all [[of] the]|the)] disabled commands (on|of|from) [the] bungee[[ ]cord]'
    ExprPingDescription:
      enabled: true
      changers: '[SET]'
      description: Returns the description/motd invloved in the Bungeecord ping event.
      syntax:
      - (ping|server list|event) bungee[[ ]cord] (motd|description)
      - bungee[[ ]cord] (ping|server list|event) (motd|description)
    ExprBungeeOnlineMode:
      enabled: true
      description: Returns if the online mode set in the main configurarion of the
        Bungeecord is true or false.
      syntax:
      - '[the] bungee[[ ]cord[['']s]] online mode'
    ExprRedisBungeeProxyPlayers:
      enabled: true
      description: Returns the players(s) of the defined RedisBungee proxy(s).
      syntax:
      - '[(all [[of] the]|the)] redis[( |-)]bungee[[ ]cord] players (on|of|from) [the]
        prox(ies|y) %strings%'
      - '[(all [[of] the]|the)] players (on|of|from) [the] redis[( |-)]bungee[[ ]cord]
        prox(ies|y) %strings%'
    ExprBungeeServerWhitelisted:
      enabled: true
      description: Returns the whitelisted players(s) of the defined Bungeecord server(s).
      syntax:
      - '[(all [[of] the]|the)] bungee[[ ]cord] whitelisted players (on|of|from) [server[s]]
        %strings%'
      - bungee[[ ]cord] server[s] %strings%'s whitelisted players
      - '[(all [[of] the]|the)] whitelisted players (on|of|from) bungee[[ ]cord] [server[s]]
        %strings%'
    ExprPingPlayers:
      enabled: true
      changers: All changers
      description: Returns the players/strings invloved in the Bungeecord ping event.
      syntax:
      - (ping|server list|event) bungee[[ ]cord] [listed ]player(s| list)
      - bungee[[ ]cord] (ping|server list|event) [listed ]player(s| list)
    ExprBungeeTitle:
      enabled: true
      description: Returns a bungeecord title.
      syntax:
      - '[a] [new] (skungee|bungee[[ ]cord]) title [with text] %string% [and] [with
        subtitle %-string%] [[that] lasts] for %timespan%[[,] [with] fade in %-timespan%][[,]
        [and] [with] fade out %-timespan%]'
    ExprBungeeServerPlayers:
      enabled: true
      description: Returns the players(s) of the defined Bungeecord server(s).
      syntax:
      - '[(all [[of] the]|the)] [bungee[[ ]cord]] players (on|of|from) [the] [server[s]]
        %strings%'
      - '[(all [[of] the]|the)] players (on|of|from) [the] [bungee[[ ]cord]] [server[s]]
        %strings%'
    ExprRedisBungeeServerPlayers:
      enabled: true
      description: Returns the players(s) of the defined RedisBungee server(s).
      syntax:
      - '[(all [[of] the]|the)] redis[( |-)]bungee[[ ]cord] players (on|of|from) [the]
        [server[s]] %strings%'
      - '[(all [[of] the]|the)] players (on|of|from) [the] redis[( |-)]bungee[[ ]cord]
        [server[s]] %strings%'
    ExprBungeecordVersion:
      enabled: true
      description: Returns the version of the Bungeecord.
      syntax:
      - '[the] version of [the] bungee[[ ]cord]'
      - '[the] bungee[[ ]cord[['']s]] version'
    ExprBungeeCurrentServer:
      enabled: true
      description: Returns the name of the server that the script calling this syntax
        is from.
      syntax:
      - '[name of] this [script[s]] [bungee[[ ]cord]] server'
      - '[bungee[[ ]cord]] server [name] of this script'
      - current [bungee[[ ]cord]]server
    ExprBungeeServers:
      enabled: true
      description: Returns a string list of all the bungeecord servers.
      syntax:
      - '[(all [[of] the]|the)] [connected] bungee[[ ]cord] servers'
    ExprNetworkVariable:
      enabled: true
      description: Returns a variable that is stored on the Bungeecord Skungee.
      syntax:
      - '[skungee] (global|network|bungee[[ ]cord]) variable [(from|of)] %objects%'
    ExprEventBungeePlayers:
      enabled: true
      description: Returns the Bungeecord player(s) invloved in the event.
      syntax:
      - '[(all [[of] the]|the)] event (skungee|bungee[[ ]cord]) player[s]'
    ExprBungeeLimit:
      enabled: true
      description: Returns the max number of players the Bungeecord is set to handle.
      syntax:
      - '[the] bungee[[ ]cord[['']s]] player limit'
    ExprBungeePlugins:
      enabled: true
      description: Returns a string list of all the bungeecord plugins.
      syntax:
      - '[(all [[of] the]|the)] bungee[[ ]cord][['']s] plugins'
  Effects:
    EffExecuteBungeeCommand:
      enabled: true
      description: Execute a console command on the proxy. Commands such as /end,
        /greload, /alert etc. Can also execute a plugin command if it's supported
        in console.
      syntax:
      - '[skungee] (run|execute) bungee[[ ][cord]] [(proxy|console)] command[s] %strings%
        [with [a[n]] %-timespan% delay [between [each [command]]]]'
      - '[skungee] make bungee[[ ][cord]] (run|execute) [(proxy|console)] command[s]
        %strings% [with [a[n]] %-timespan% delay [between [each [command]]]]'
    EffActionbar:
      enabled: true
      description: Send a actionbar message to anyone on the Bungeecord network.
      syntax:
      - '[skungee] (send|display|show) [a[n]] action[ ]bar [with [(text|message)]]
        %string% to bungee[[ ]cord] [(player|uuid)[s]] %strings/players%'
    EffChat:
      enabled: true
      description: Execute a bungeecord command or chat on a player. Keep in mind
        that the command is executed on the current Spigot server of the user. There
        is another syntax to execute on the Bungeecord. Doesn't support colour. If
        you want colour, I suggest using the evaluate effect.
      syntax:
      - '[skungee] (force|make|execute) bungee[[ ]cord]] [(player|uuid)] %strings/players%
        [to] (say|chat|command|(run|execute)[ command]) %strings%'
      - '[skungee] (force|make|execute) [(player|uuid)] %strings/players% [to] (say|chat|command|(run|execute)[
        command]) %strings% on [the] bungee[[ ]cord]'
    EffEvaluate:
      enabled: true
      description: Evaluate effects on different servers across the Bungeecord network.
      syntax:
      - '[skungee] eval[uate] [[skript] code] %strings% on [[the] bungee[[ ]cord]]
        [server[s]] %strings%'
    EffMessagePlayers:
      enabled: true
      description: Message defined players from the bungeecord network.
      syntax:
      - '[skungee] (message|send|msg) %strings% to bungee[[ ]cord] [(player|uuid)[s]]
        %strings/players%'
    EffWaitUntil:
      enabled: true
      description: Waits until Skungee has connected to the Bungeecord Skungee.
      syntax:
      - wait [asynchronously] until [skungee] (connect(s|[ion])|[has] connect(ed|[ion]))
        [[with] timeout %-timespan%]
    EffTabHeaderFooter:
      enabled: true
      description: Set the tablist header and/or footer of a player on the Bungeecord
        network. This may reset when they switch servers.
      syntax:
      - set tab[list] (1¦header|2¦footer|3¦header and footer) (for|of) bungee[[ ]cord]
        [(player|uuid)[s]] %strings/players% to %strings% [and %-strings%]
    EffKickPlayer:
      enabled: true
      description: Kicks a player from the bungeecord network. You can add a message
        aswell, if it's not set, a default message will be used.
      syntax:
      - '[skungee] kick bungee[[ ]cord] [(player|uuid)[s]] %strings/players% [(by
        reason [of]|because [of]|on account of|due to) %-string%]'
      - '[skungee] kick [(player|uuid)[s]] %strings/players% from [the] bungee[[ ]cord]
        [(by reason [of]|because [of]|on account of|due to) %-string%]'
    EffUnregisterCommands:
      enabled: true
      description: Unregister the commands from the defiend plugin(s).
      syntax:
      - unregister [the] commands from [the] [bungee[[ ]cord]] plugin[s] %strings%
    EffPlayerCommand:
      enabled: true
      description: Execute a bungeecord command or chat on a player. Keep in mind
        that the command is executed on the current Spigot server of the user. There
        is another syntax to execute on the Bungeecord. Doesn't support colour. If
        you want colour, I suggest using the evaluate effect.
      syntax:
      - '[skungee] (force|make) bungee[[ ]cord]] [(player|uuid)] %strings/players%
        [to] (say|chat) %strings%'
      - '[skungee] (force|make) [(player|uuid)] %strings/players% (say|chat) %strings%
        on [the] bungee[[ ]cord]'
    EffConnectServer:
      enabled: true
      description: Send bungeecord players to different servers.
      syntax:
      - '[skungee] (send|connect) bungee[[ ]cord] [(player|uuid)[s]] %strings/players%
        to [bungee[[ ]cord]] [server[s]] %string% [with reason %-connectreason%]'
      - '[skungee] (send|connect) [(player|uuid)[s]] %strings/players% to [bungee[[
        ]cord]] server[s] %string% [with reason %-connectreason%]'
    EffUnregisterListeners:
      enabled: true
      description: Unregister the listeners from the defiend plugin(s). This makes
        it so the plugin doesn't recieve any events. Good if you have a bad plugin.
      syntax:
      - unregister [the] listeners from [the] [bungee[[ ]cord]] plugin[s] %strings%
    EffSkungeeMessage:
      enabled: true
      description: Send messages to different Skungee servers, this acts a function
        system for Bungeecord.
      syntax:
      - send [(bungee[[ ]cord]]|skungee)] [message[s]] %strings% to [the] [(bungee[[
        ]cord]]|skungee)] channel[s] %strings%
    EffAsyncNetworkVariable:
      enabled: true
      description: Sets a defined variable on the Spigot side in a async cache from
        the network variables on the Bungeecord Skungee.
      syntax:
      - set async [variable] %objects% to [the] [skungee] (global|network|bungee[[
        ]cord]) variable [(from|of)] %objects%
      - set [variable] %objects% in async to [the] [skungee] (global|network|bungee[[
        ]cord]) variable [(from|of)] %objects%
    EffRedisBungeeCommand:
      enabled: true
      description: Execute console command(s) on the defined proxy(ies).
      syntax:
      - (run|execute) redis[( |-)]bungee[[ ][cord]] [(proxy|console)] command[s] %strings%
        [(on|of|from) [the] [server[s]] %-strings%]
      - make redis[( |-)]bungee[[ ][cord]] (run|execute) [(proxy|console)] command[s]
        %strings% [(on|of|from) [the] [server[s]] %-strings%]
    EffEnablePlugins:
      enabled: true
      description: Enable all bungeecord plugins.
      syntax:
      - enable [(all [[of] the]|the)] bungee[[ ]cord] plugins
    EffLoadPlugins:
      enabled: true
      description: Enable all bungeecord plugins.
      syntax:
      - load [(all [[of] the]|the)] bungee[[ ]cord] plugins
    EffStopProxy:
      enabled: true
      description: Ends the Bungeecord proxy. You can use \n to make a new line in
        the message string.
      syntax:
      - '[skungee] (stop|kill|end) [the] [bungee[[ ]cord]] (proxy|console) [[with]
        [the] (message|string|text) %-string%]'
    EffShutdownServer:
      enabled: true
      description: Shutdown a bungeecord server. The saving section of the syntax
        will allow server instance users to save the files of the server. If not they
        get deleted.
      syntax:
      - (stop|shutdown) bungee[[ ]cord] server[s] %strings% [(and|with) [serverinstances]
        saving %-boolean%]
    EffPlayerChat:
      enabled: true
      description: Execute a bungeecord command or chat on a player. Keep in mind
        that the command is executed on the current Spigot server of the user. There
        is another syntax to execute on the Bungeecord. Doesn't support colour. If
        you want colour, I suggest using the evaluate effect.
      syntax:
      - execute [bungee[[ ]cord]] command[s] %strings% (from|by) bungee[[ ]cord]]
        [(player|uuid)] %strings/players%
      - '[execute] bungee[[ ]cord]] [(player|uuid)] %strings/players% command %strings%'
      - (force|let|make) bungee[[ ]cord]] [(player|uuid)] %strings/players% execute
        [[the] command] %strings% [on [the] bungee[[ ]cord]]
    EffSendTitle:
      enabled: true
      description: Sends a SkugneeTitle to the defined Bungeecord player(s).
      syntax:
      - (show|display|send) [skungee] title %skungeetitle% to [bungee[[ ]cord]] [(player|uuid)][s]
        %strings/players%
    EffKickPlayers:
      enabled: true
      description: Kicks all of the players from the bungeecord network. You can add
        a message aswell, if it's not set, a default message will be used. If you
        want to define which users to kick, use the kick effect which kicks individual
        players.
      syntax:
      - '[skungee] kick [(all [[of] the]|the)] bungee[[ ]cord] players [(by reason
        of|because [of]|on account of|due to) %-string%]'
      - '[(skellett[ ][(cord|proxy)]|bungee[ ][cord])] kick [(the|all)] [of] [the]
        players from bungee[ ][cord] [(by reason of|because [of]|on account of|due
        to) %-string%]'
  Conditions:
    CondPlayerCanAccess:
      enabled: true
      description: Check if a player has the right to join a server.
      syntax:
      - '[bungee[[ ]cord]] [(player|uuid)] %string/player% (1¦can|2¦can(n''t| not))
        (connect|join|login|log on) [to] [the] [server] %string%'
    CondPlayerForge:
      enabled: true
      description: Check if a player from the Bungeecord is using the Forge client.
      syntax:
      - '[bungee[[ ]cord]] [(player|uuid)] %string/player% (1¦(has|is (running|using))|2¦(is(n''t
        (running|using)| not))) [the] forge [client]'
    CondPlayerLegacy:
      enabled: true
      description: Check if a player is on a legacy client, usally lower than 1.7.
        May also be called if the client is not by Mojang.
      syntax:
      - bungee[[ ]cord] [(player|uuid)] %string/player% (1¦is|2¦is(n't| not)) [a]
        legacy [(client|account)]
      - '[(player|uuid)] %string/player% (1¦is|2¦is(n''t| not)) [a] legacy [(client|account)]'
    CondPlayerHasPermission:
      enabled: true
      description: Check if a player has chat colors enabled or disabled.
      syntax:
      - '[bungee[[ ]cord]] [(player|uuid)] %string/player% (1¦(has|do[es])|2¦(has|do[es])(n''t|
        not)) (have|got) [the] bungee[[ ]cord] permission[s] %strings%'
    CondPlayerOnline:
      enabled: true
      description: Check if a player is online the Bungeecord. Keep in mind that they
        need to have joined the proxy and not through a port for it to work.
      syntax:
      - bungee[[ ]cord] [(player|uuid)] %string/player% (1¦is|2¦is(n't| not)) online
        [the] [bungee[[ ]cord]]
      - '[(player|uuid)] %string/player% (1¦is|2¦is(n''t| not)) online [the] bungee[[
        ]cord]'
    CondServerOnline:
      enabled: true
      description: Check if a server is online the Bungeecord.
      syntax:
      - '[bungee[[ ]cord]] server %string% (1¦is|2¦is(n''t| not)) (running|online|responding)'
    CondRedisOnlinePlayer:
      enabled: true
      description: Check if a player is online the RedisBungeecord. Keep in mind that
        they need to have joined the proxy and not through a port for it to work.
      syntax:
      - redis[( |-)]bungee[[ ]cord] [(player|uuid)] %string/player% (1¦is|2¦is(n't|
        not)) online [the] redis[( |-)]bungee[[ ]cord]
      - '[(player|uuid)] %string/player% (1¦is|2¦is(n''t| not)) online [the] redis[(
        |-)]bungee[[ ]cord]'
    CondPlayerHasColours:
      enabled: true
      description: Check if a player has chat colors enabled or disabled.
      syntax:
      - '[bungee[[ ]cord]] [(player|uuid)] %string/player% (1¦(has|do[es])|2¦(has|do[es])(n''t|
        not)) (have|got) chat colo[u]r[s] [(enabled|on)]'
