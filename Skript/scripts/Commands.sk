options:
	# Delete tab completions when the server starts
	delete-tab-completions-on-server-start: false # true/false

import:
	org.bukkit.event.server.TabCompleteEvent
	java.util.Arrays

plural expression tab completions:
	return type: string
	loop of: string
	get:
		return {tabcompletions::*}
	add:
		add change values where [{tabcompletions::*} does not contain input] to {tabcompletions::*}
	set:
		set {tabcompletions::*} to change values
	remove:
		remove change values from {tabcompletions::*}
	delete:
		delete {tabcompletions::*}
	reset:
		delete {tabcompletions::*}

effect:
	patterns:
		create tab complet(er|ion) for %strings%
		make tab complet(er|ion) for %strings%
	trigger:
		set {_l::*} to expression-1
		loop {_l::*}:
			add loop-value to tab completions

on skript load:
	{@delete-tab-completions-on-server-start} is true
	delete tab completions

function firstXElementsCompare(l1: objects, l2: objects, x: number) :: boolean:
	loop {_x} times:
		{_l1::%loop-num%} != {_l2::%loop-num%}
		return false
	return true

on TabCompleteEvent:
	loop {tabcompletions::*}:
		set {_l} to loop-value.split(" ", 2)
		event.getBuffer() starts with "/%{_l}[0]% "
		add {_l}[1] to {_fullcmds::*}
	{_fullcmds::*} is set
	set {_cmd} to event.getBuffer().split(" ", 2)[1]
	if {_cmd} is not set:
		loop {_fullcmds::*}:
			set {_l2::*} to split loop-value at " "
			{_out::*} does not contain {_l2::1}
			add {_l2::1} to {_out::*}
	else:
		set {_cmd1::*} to split {_cmd} at " "
		set {_s} to size of {_cmd1::*}
		set {_cmd-last} to last element of {_cmd1::*}
		loop {_fullcmds::*}:
			delete {_l::*}
			set {_l::*} to split loop-value at " "
			firstXElementsCompare({_l::*}, {_cmd1::*}, {_s}-1) = true
			{_l::%{_s}%} is set
			{_l::%{_s}%} starts with {_cmd-last}
			{_cmd-last} is not {_l::%{_s}%}
			{_out::*} does not contain {_l::%{_s}%}
			add {_l::%{_s}%} to {_out::*}
	{_out::*} is set
	set {_a} to Arrays.asList([{_out::*}])
	event.setCompletions({_a})

command /Spawn:
    aliases: /town
    description: Teleport to the Town
    executable by: players
    trigger:
        teleport player to location(30, 17, -2.5, world "Spawn", 89, 0) 

command /Testmenu:
    description: Join the Test Server
    executable by: players
    trigger:
        if the current bungee cord server of player is "Test" or "Test2":
            if player has permission "test.menu":
                make player execute command "/dm open Testmenu"

command /Discord:
    executable by: players
    trigger:
        send formatted "&7Join our &9Discord &a<tooltip:&aClick to join the Discord!><url:https://discord.com/invite/bw4DztR>https://discord.com/invite/bw4DztR<reset>&7!" to player

#Referal
# command /Referal [<string>]:
#     executable by: players
#     trigger:
#         send "&aYou have refered &ePLACEHOLDER &aplayers!" to player
#         if arg 1 is not set:    
#             if player doesn't have permission "REFERED":
#                 if arg-1 parsed as offline player has played before:
#                     send "&aYou have been refered by &e%arg-1%&a, both of you have received a reward!" to player
#                 else:
#                     send "&cPlease enter a player's name!" to player
#             else:
#                 send "&6/Referal <name> &e- &fEnter the User's name who brought you to the Server to receive a reward and give them a reward!" to player
#             if player has permission "REFERED":
#                 send "&cYou have already chosen who refered you!" to player

on load: # Doesn't have to be in a load event
    add "ProfileViewer [<player>]" to tab completions
    add "Pv" to tab completions

command /ProfileViewer [<player>]:
    description: View other user's profile
    executable by: players
    trigger:
        if arg-1 is not set:
            make player execute command "/playerprofiles:playerinformation view %player%"
        if arg-1 is set:
            make player execute command "/playerprofiles:playerinformation view %arg-1%"
command /Pv [<player>]:
    description: View other user's profile
    executable by: players
    trigger:
        if arg-1 is not set:
            make player execute command "/playerprofiles:playerinformation view %player%"
        if arg-1 is set:
            make player execute command "/playerprofiles:playerinformation view %arg-1%"



#MUSIC
on load:
    add "music stop" to tab completions
    add "music off" to tab completions
    add "music play" to tab completions
    add "music start" to tab completions
    add "music on" to tab completions
    add "music volume <1-100>" to tab completions

command /Music [<text>] [<string>]:
    executable by: players
    trigger:
        if arg 1 is "stop":    
            make player execute command "/anbs song stop"
            execute console command "/lp user %player% permission set Music.ON false"
        if arg 1 is "off":    
            make player execute command "/anbs song stop"
            execute console command "/lp user %player% permission set Music.ON false"
        if arg 1 is "play":    
            make player execute command "/anbs song play"
            execute console command "/lp user %player% permission set Music.ON true"
        if arg 1 is "start":    
            make player execute command "/anbs song play"
            execute console command "/lp user %player% permission set Music.ON true"
        if arg 1 is "on":    
            make player execute command "/anbs song play"
            execute console command "/lp user %player% permission set Music.ON true"
        if arg 1 is "volume":    
            if arg 2 is set:    
                make player execute command "/anbs song volume %arg-2%"
            else:
                send "&6/Music Volume <1-100> &e- &fAdjust the volume of the music!" to player


on load:
    add "rp enable" to tab completions
    add "rp disable" to tab completions
    add "rp download" to tab completions

command /rp <string>:
	executable by: players
	trigger:
		if arg 1 is "enable":    
			if player doesn't have permission "RP.DOWNLOAD":
				send message "&aResource Pack have been enabled! Use /RP Download or relog to get it!" to player
				execute console command "/lp user %player% permission set RP.DOWNLOAD true"
			if player has permission "RP.DOWNLOAD":
				send message "&aResource Pack already enabled! Use /RP Download or relog to get it!" to player
		if arg 1 is "disable":    
			if player has permission "RP.DOWNLOAD":
				send message "&cResource Pack have been disabled!" to player
				execute console command "/lp user %player% permission set RP.DOWNLOAD false"
			if player doesn't have permission "RP.DOWNLOAD":
				send message "&cResource Pack already disabled!" to player
		if arg 1 is "download":    
			send message "&aResource Pack is now loading!" to player
			send the resource pack from "https://www.dropbox.com/s/9ame51dgtjdmadq/AdventuresCraft3.zip?dl=1" with hash "f2e3f6cbda5745e5a08fbb43e3ea881de9f8c30b" to the player
			wait 10 seconds
			if the player doesn't have a resource pack loaded:
				send message "&cIf you're not seeing the Resource Pack, you must enable the setting before joining the server!" to player

command /ActiveQuests:
    aliases: /ActiveQuest, /CurrentQuests, /CurrentQuests
    executable by: players
    trigger:
        make console execute command "/rpgmenu open default-Menus-menu.active %player%"
command /UnclaimedQuests:
    executable by: players
    trigger:
        make console execute command "/rpgmenu open default-Menus-menu.unclaimed %player%"
command /Quest:
    aliases: /Quests, /QuestsMenu
    executable by: players
    trigger:
        make console execute command "/dm open Quests %player%"

# command /CurrentTime:
#     executable by: players
#     trigger:
#         set {1st::Day} to 10 seconds from now
#         message "Set %{1st::Day}%"
#         message "Unix %unix timestamp of now%"
#         message "Current server time: %now%"
#         message "Current server time: %now formatted human-readable%"
# command /TimeUntil:
#     executable by: players
#     trigger:
#         message "%difference between {1st::Day} and now%"


# every 5 seconds:
#     if now < {1st::Day}:
#         broadcast "Xur has spawned"
#         broadcast "Timer has been reset!"
#         set {1st::Day} to 10 seconds from now
