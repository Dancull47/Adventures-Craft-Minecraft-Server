options:
#======================================== MESSAGES ========================================
	prefix: &8[Item Filter] &7
	prefixRed: &4[Item Filter] &c

	subtitle: &cThis item is on your blacklist!

	itemAdded: &7Item &c%{_item}% &7added to the blacklist.
	itemRemoved: &7Item &c%{_item}%&7 was removed from the blacklist.
	itemNotExist: &cThat item does not exist. &7View the item list <tooltip:&aClick to view!><url:https://hub.spigotmc.org/javadocs/spigot/org/bukkit/Material.html>&ehere&7!<reset>

	nothing: Nothing here...

	blacklistCleaned: &7The blacklist was cleaned.
	blacklistedItems: &7Blacklisted items: &c

	subcommandNotExist: &cThat subcommand does not exist

	scriptReloaded: &7Script reloaded!
	noPermission: &cYou do not have permissions to do that!

	command: &7
	divider: &c - &f
	explanation: &f
	loadName: &7&lItemFilter &fv
	version: 1.0.1
#======================================== FUNCTIONS ======================================== !New in my scripts :D!
function itemChecker(arg: text) :: item:
	set {_item} to {_arg}
	replace every "_" with " " in {_item}
	set {_item} to {_item} parsed as item
	return {_item}

function sendHelp(p: player):
	send "{@command}/ifilter add <item>{@divider}{@explanation}Add an item to the blacklist" to {_p}
	send "{@command}/ifilter remove <item>{@divider}{@explanation}Remove an item from the blacklist" to {_p}
	send "{@command}/ifilter clear{@divider}{@explanation}Completely clean the blacklist" to {_p}
	send "{@command}/ifilter blacklist{@divider}{@explanation}Display which items are currently blacklisted" to {_p}
#======================================== COMMANDS ========================================
command /itemfilter [<text>] [<text>]:
	aliases: /ifilter
	permission: itemfilter.command
	permission message: {@noPermission}
	trigger:
		if arg 1 is not set:
			sendHelp(player)
		else if arg 1 is "help":
			sendHelp(player)
		else if arg 1 is "add":
			if player has permission "itemfilter.add":
				set {_item} to itemChecker(arg-2)
				if {_item} is set:
					add {_item} to {itemfilterBL::%player%::*}
					send "{@prefix}{@itemAdded}"
				else:
					send formatted "{@prefix}{@itemNotExist}"
			else:
				send "{@noPermission}"
		else if arg 1 is "list":
			if player has permission "itemfilter.list":
				loop {itemfilterBL::%player%::*}:
					add loop-value to {_list::*}
				if {_list::*} is not set:
					set {_list::*} to "{@nothing}"
				send "{@prefix}{@blacklistedItems}%{_list::*}%"
			else:
				send "{@noPermission}"
		else if arg 1 is "clear":
			if player has permission "itemfilter.clear":
				delete {itemfilterBL::%player%::*}
				send "{@prefix}{@blacklistCleaned}"
			else:
				send "{@noPermission}"
		else if arg 1 is "remove":
			if player has permission "itemfilter.remove":
				set {_item} to itemChecker(arg-2)
				if {_item} is set:
					remove {_item} from {itemfilterBL::%player%::*}
					send "{@prefix}{@itemRemoved}"
			else:
				send "{@noPermission}"
		else if arg 1 is "reload":
			if player has permission "itemfilter.reload":
				execute console command "/sk reload %script%"
				send "{@prefix}{@scriptReloaded}"
			else:
				send "{@noPermission}"
		else:
			send "{@prefix}{@subcommandNotExist}"
#======================================== MECHANICS ========================================
on player pick up:
	if {itemfilterBL::%player%::*} contains event-item:
		cancel the event
		send subtitle "{@subtitle}" to player for 2 ticks with fadein 0 second and fade out 0 second